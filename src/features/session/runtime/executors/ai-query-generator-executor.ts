import { startTextStream } from '@/lib/ai/streaming/start';
import { buildQueryPrompt } from '../prompts/query-generator';

export interface AIQueryGenInput {
    directionSpec?: string;
    priorBriefs?: Array<{ id: string; title?: string; firstAuthor?: string; publicationDate?: string; abstract?: string; keywords?: string[] }>;
    round?: number;
}

export const aiQueryGeneratorExecutor = {
    async generate(ctx: AIQueryGenInput): Promise<{ query: string; reasoning: string }> {
        const prompt = buildQueryPrompt(ctx);
        let rationale = '';
        let query = '';
        const controller = new AbortController();
        try {
            const stream = startTextStream({ prompt }, { signal: controller.signal });
            let buf = '';
            for await (const ev of stream) {
                if (ev.type === 'delta') buf += ev.text;
            }
            // 约定输出：第一行 rationale（≤2句），最后一行以 Query: 开头给出短查询
            const lines = buf.split(/\r?\n/).map(l => l.trim()).filter(Boolean);
            const qline = lines.reverse().find(l => /^query\s*:/i.test(l)) || '';
            query = qline.replace(/^query\s*:/i, '').trim();
            rationale = lines.reverse().slice(0, 2).join(' ');
            query = sanitizeQuery(query) || '';
            if (!query) {
                // 兜底：取方向前两词
                const seed = (ctx.directionSpec || 'research').split(/\W+/).filter(Boolean).slice(0, 2).join(' ');
                query = sanitizeQuery(seed);
            }
            try { console.debug('[AIQueryGen] query:', query); } catch { }
            return { query, reasoning: rationale || 'Generated by AI planner.' };
        } catch (e: any) {
            // 兜底：退回到启发式
            const seed = (ctx.directionSpec || 'research').split(/\W+/).filter(Boolean).slice(0, 3).join(' ');
            return { query: sanitizeQuery(seed), reasoning: 'Fallback heuristic due to AI error.' };
        }
    }
};

function sanitizeQuery(raw: string): string {
    if (!raw) return '';
    let s = raw;
    // 去掉任何标签/尖括号内容
    s = s.replace(/<[^>]+>/g, ' ');
    // 统一空白
    s = s.replace(/\s+/g, ' ').trim();
    // 去掉中文标点与结尾标点
    s = s.replace(/[\u3000-\u303F，。、《》【】（）！？；：]/g, ' ').replace(/[\.,;:!?]+$/g, '').trim();
    // 限制词数到 8
    const words = s.split(' ').filter(Boolean).slice(0, 8);
    s = words.join(' ');
    // 限长
    if (s.length > 64) s = s.slice(0, 64).trim();
    return s;
}


